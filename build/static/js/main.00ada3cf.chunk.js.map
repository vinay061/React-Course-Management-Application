{"version":3,"sources":["components/AboutPage.js","components/HomePage.js","components/common/Header.js","components/CourseList.js","actions/actionTypes.js","components/appDispatcher.js","store/courseStore.js","api/apiUtils.js","api/courseApi.js","actions/courseActions.js","components/CoursesPage.js","components/common/NotFoundPage.js","components/common/TextInput.js","components/CourseForm.js","components/ManageCourse.js","components/App.js","index.js"],"names":["AboutPage","React","Component","HomePage","to","className","Header","activeStyle","color","exact","CourseList","props","courses","map","course","onClick","deleteCourse","id","slug","title","authorId","category","dispatcher","Dispatcher","CHANGE_EVENT","_courses","store","callback","this","on","emit","find","EventEmitter","register","action","actionType","actionTypes","filter","parseInt","emitChange","push","handleResponse","response","a","ok","json","status","text","error","Error","handleError","console","baseUrl","process","REACT_APP_API_URL","saveCourse","fetch","method","headers","body","JSON","stringify","then","catch","courseApi","savedCourse","dispatch","loadCourses","courseId","CoursesPage","useState","courseStore","getCourses","setCourses","onChange","useEffect","addChangeListener","length","removeChangeListener","NotFoundPage","TextInput","wrapperClass","htmlFor","label","type","name","value","defaultProps","CourseForm","onSubmit","errors","ManageCourse","setErrors","setCourse","match","params","courseActions","getCoursesBySlug","event","updatedCourse","target","preventDefault","_errors","Object","keys","formisValid","history","toast","success","App","autoClose","hideProgressBar","path","component","from","render","document","getElementById"],"mappings":"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","file":"static/js/main.00ada3cf.chunk.js","sourcesContent":["import React from 'react';\n\nclass AboutPage extends React.Component {\n    render() {\n        return <div>\n                <h1>About</h1>\n                <p>This app uses React</p>\n            </div>\n    }\n}\n\nexport default AboutPage;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction HomePage(){\n    return(\n        <div>\n            <h1>Plural Sight Administration</h1>\n            <p>React,Flux, and React Router for ultra-responsive web apps</p>\n            <Link to=\"about\" className=\"btn btn-primary\">About</Link>\n        </div>\n    );\n}\n\nexport default HomePage;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Header(){\n    const activeStyle = { color: \"orange\" };\n    return (\n        <div>\n            <NavLink activeStyle={activeStyle} exact to=\"/\">Home</NavLink>{\" | \"}\n            <NavLink activeStyle={activeStyle} to=\"/about\">About</NavLink>{\" | \"}\n            <NavLink activeStyle={activeStyle} to=\"/courses\">Courses</NavLink>{\" | \"}\n        </div>\n        \n    );\n}\n\nexport default Header;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction CourseList(props){\n    return (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>&nbsp;</th>\n              <th>Title</th>\n              <th>Author ID</th>\n              <th>Category</th>\n            </tr>\n          </thead>\n          <tbody>\n              \n            {props.courses.map(course => {\n              return (\n                <tr key={course.id}>\n                  <td>\n                    <button\n                      className=\"btn btn-outline-danger\"\n                      onClick={() => {\n                        props.deleteCourse(course.id);\n                      }}\n                      >\n                        DELETE\n                    </button>\n                  </td>\n                  <td><Link to={\"/course/\" + course.slug}>{course.title}</Link></td>\n                  <td>{course.authorId}</td>\n                  <td>{course.category}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n    );\n}\n\nCourseList.propTypes = {\n    deleteCourse: PropTypes.func.isRequired,\n    courses: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n            authorId: PropTypes.number.isRequired,\n            category: PropTypes.string.isRequired\n        })\n    ).isRequired\n};\n\nexport default CourseList;","// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    CREATE_COURSE : \"CREATE_COURSE\",\n    UPDATE_COURSE : \"UPDATE_COURSE\",\n    DELETE_COURSE : \"DELETE_COURSE\",\n    LOAD_COURSE: \"LOAD_COURSE\"    \n};","import { Dispatcher } from 'flux';\nconst dispatcher = new Dispatcher();\nexport default dispatcher;","import { EventEmitter } from 'events';\nimport actionTypes from '../actions/actionTypes';\nimport dispatcher from '../components/appDispatcher';\n\nconst CHANGE_EVENT = \"change\";\nlet _courses = [];\n\nclass CourseStore extends EventEmitter {\n    addChangeListener(callback){\n        this.on(CHANGE_EVENT, callback);\n    }\n\n    removeChangeListener(callback){\n        this.on(CHANGE_EVENT, callback);\n    }\n\n    emitChange(){\n        this.emit(CHANGE_EVENT);\n    }\n\n    getCourses(){\n        return _courses;\n    }\n\n    getCoursesBySlug(slug){\n        return _courses.find(course => course.slug === slug);\n    }\n}\n\nconst store = new CourseStore();\n\n//Registering the dispatcher\ndispatcher.register(action => {\n    switch(action.actionType){\n        case actionTypes.DELETE_COURSE:\n             _courses = _courses.filter(\n                 course => course.id !== parseInt(action.id, 10)\n             );\n             store.emitChange();\n             break;\n        case actionTypes.CREATE_COURSE:\n            _courses.push(action.course);\n            store.emitChange();\n            break;\n        case actionTypes.UPDATE_COURSE:\n            _courses = _courses.map( course => \n                course.id === action.course.id ? action.course : course\n            );\n            store.emitChange();\n            break;\n        case actionTypes.LOAD_COURSE:\n            _courses = action.courses;\n            store.emitChange();\n            break;\n        default:\n            //nothing to do\n    }\n});\nexport default store;","export async function handleResponse(response) {\n  if (response.ok) return response.json();\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\nexport function handleError(error) {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  throw error;\n}\n","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.REACT_APP_API_URL + \"/courses/\";\n\nexport function getCourses() {\n  return fetch(baseUrl)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function getCourseBySlug(slug) {\n  return fetch(baseUrl + \"?slug=\" + slug)\n    .then(response => {\n      if (!response.ok) throw new Error(\"Network response was not ok.\");\n      return response.json().then(courses => {\n        if (courses.length !== 1) throw new Error(\"Course not found: \" + slug);\n        return courses[0]; // should only find one course for a given slug, so return it.\n      });\n    })\n    .catch(handleError);\n}\n\nexport function saveCourse(course) {\n  return fetch(baseUrl + (course.id || \"\"), {\n    method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({\n      ...course,\n      // Parse authorId to a number (in case it was sent as a string).\n      authorId: parseInt(course.authorId, 10)\n    })\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function deleteCourse(courseId) {\n  return fetch(baseUrl + courseId, { method: \"DELETE\" })\n    .then(handleResponse)\n    .catch(handleError);\n}\n","import dispatcher from '../components/appDispatcher';\nimport * as courseApi from '../api/courseApi';\nimport actionTypes from './actionTypes';\n\n\nexport function saveCourse(course){\n    return courseApi.saveCourse(course).then( savedCourse => {\n        dispatcher.dispatch({\n            actionType : course.id \n            ? actionTypes.UPDATE_COURSE \n            : actionTypes.CREATE_COURSE,\n            course : savedCourse\n        });\n    });\n}\n\nexport function loadCourses(){\n    return courseApi.getCourses().then( courses => {\n        dispatcher.dispatch({\n            actionType : actionTypes.LOAD_COURSE,\n            courses : courses\n        });\n    });\n}\n\nexport function deleteCourse(id){\n    return courseApi.deleteCourse(id).then(() => {\n        dispatcher.dispatch({\n            actionType : actionTypes.DELETE_COURSE,\n            id : id\n        });\n    });\n}","import React, { useState, useEffect } from \"react\";\nimport CourseList from \"./CourseList\";\nimport { Link } from \"react-router-dom\";\nimport courseStore from \"../store/courseStore\";\nimport { loadCourses } from \"../actions/courseActions\";\nimport { deleteCourse } from \"../actions/courseActions\";\n\nfunction CoursesPage(){\n  const [courses, setCourses] = useState(courseStore.getCourses());\n  \n  useEffect(() => {\n    courseStore.addChangeListener(onChange);\n    if(courseStore.getCourses().length === 0) loadCourses();\n    return () => courseStore.removeChangeListener(onChange); // cleanup on unmount\n  },[]);\n\n  function onChange(){\n    setCourses(courseStore.getCourses());\n  }\n    \n  return (\n      <>\n        <h2>Courses</h2>\n        <Link className=\"btn btn-primary\" to=\"/course\">ADD COURSES</Link>\n        <CourseList courses={courses} deleteCourse={deleteCourse}/>\n        \n      </>\n    );\n  }\n\n\nexport default CoursesPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NotFoundPage(){\n    return(\n        <div>\n            <h1>Page Not Found</h1>\n            <p>Refresh later</p>\n            <Link to=\"/\">Home</Link>\n        </div>\n    );\n}\n\nexport default NotFoundPage;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TextInput(props){\n    let wrapperClass = \"form-group\";\n    if (props.error.length > 0) {\n        wrapperClass += \" has-error\";\n  }\n\n    return (\n        <div className={wrapperClass}>\n            <label htmlFor={props.id}>{props.label}</label>\n            <div className=\"field\">\n                <input\n                    id={props.id}\n                    type=\"text\"\n                    onChange={props.onChange}\n                    name={props.name}\n                    value={props.value}\n                    className=\"form-control\"\n                />\n            </div>\n            {props.error && <div className=\"alert alert-danger\">{props.error}</div>}\n        </div>\n        \n        \n    );\n}\n\nTextInput.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string,\n    error: PropTypes.string\n};\n\nTextInput.defaultProps = {\n    error: \"\"\n};\n\nexport default TextInput;","import React from \"react\";\nimport TextInput from \"./common/TextInput\";\nimport PropTypes from \"prop-types\";\n\n/* onChange={props.onTitleChange}*/\nfunction CourseForm(props) {\n  return (\n    <form onSubmit={props.onSubmit}>\n     \n          <TextInput\n            id=\"title\"\n            label=\"Title\"\n            onChange={props.onChange}\n            name=\"title\"\n            error={props.errors.title}\n            value={props.course.title || \"\"}\n          />\n        \n\n      <div className=\"form-group\">\n        <label htmlFor=\"author\">Author</label>\n        <div className=\"field\">\n          <select\n            id=\"author\"\n            name=\"authorId\"\n            onChange={props.onChange}\n            value={props.course.authorId}\n            className=\"form-control\"\n          >\n            <option value=\"\" />\n            <option value=\"1\">Cory House</option>\n            <option value=\"2\">Scott Allen</option>\n          </select>\n        </div>\n        {props.errors.authorId && (\n          <div className=\"alert alert-danger\">{props.errors.authorId}</div>\n        )}\n      </div>\n\n      \n          <TextInput\n            id=\"category\"\n            label=\"Category\"\n            name=\"category\"\n            onChange={props.onChange}\n            error={props.errors.category}\n            value={props.course.category}\n          />\n       \n\n      <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\n    </form>\n  );\n}\n\nCourseForm.propTypes = {\n  course: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errors: PropTypes.func.isRequired\n};\n\nexport default CourseForm;\n","import React, { useEffect } from 'react';\nimport CourseForm from './CourseForm';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport * as courseActions from '../actions/courseActions';\nimport courseStore from \"../store/courseStore\";\n\n\nconst ManageCourse = props => {\n    const [errors, setErrors] = useState({});\n    const [courses, setCourses] = useState(courseStore.getCourses());\n    const [course, setCourse] = useState({\n        id: null,\n        slug: \"\",\n        title: \"\",\n        authorId: null,\n        category: \"\"\n    });\n\n    useEffect(() => {\n        courseStore.addChangeListener(onChange);\n        const slug = props.match.params.slug;\n        if(courses.length === 0){\n            courseActions.loadCourses();\n        }\n        else if(slug) {\n            setCourse(courseStore.getCoursesBySlug(slug));\n        }\n        return () => courseStore.removeChangeListener(onChange);\n    },[courses.length, props.match.params.slug]);\n\n    function onChange(){\n        setCourses(courseStore.getCourses());\n    }\n\n    function formisValid() {\n        const _errors = {} ;\n        if(!course.title) _errors.title = \"Title is required\";\n        if(!course.authorId) _errors.authorId = \"Author Id is required\";\n        if(!course.category) _errors.category = \"Category is required\";\n        setErrors(_errors);\n        return Object.keys(_errors).length === 0;\n    }\n\n    //third and the best way of declaring\n    function handleChange(event){\n        const updatedCourse = {...course, [event.target.name] : event.target.value};\n        setCourse(updatedCourse);\n    }\n    \n    function handleSubmit(event){\n        event.preventDefault();\n        if(!formisValid()) return;\n        courseActions.saveCourse(course).then( () => {\n            props.history.push(\"/courses\");\n            toast.success(\"Course Saved\");\n        });\n    }\n\n  \n    return(\n        <>\n            <h2>Manage Courses</h2>\n            <CourseForm \n            errors={errors}\n            course={course}\n            onChange={handleChange}\n            onSubmit={handleSubmit}/>\n        </>\n    );\n};\n\nexport default ManageCourse;\n\n\n/* Alternate ways of declaring\n\n//first way of declaring a function\n/* function ManageCourse(props){\n    const [course, setCourse] = useState({\n        id: null,\n        slug: \"\",\n        title: \"\",\n        authorId: null,\n        category: \"\"\n\n    });*/\n\n    /* <Prompt when={true} message=\"Are you sure you want to leave?\" />\n            {props.match.params.slug}*/\n\n     //first way of declaring\n    /*function handleTitleChange(event){\n        const updatedCourse = {...course};\n        updatedCourse.title = event.target.value;\n        \n    }*/\n\n    //second way of declaring\n     /*function handleTitleChange(event){\n        const updatedCourse = {...course, title:event.target.value};\n        setCourse(updatedCourse);\n\n    }\n\n    function handleChange(target){\n        setCourse({\n            ...course,\n            [target.name]: target.value\n        });\n    }\n    //this will save the course to the courseApi server\n    function handleSubmit(event){\n        event.preventDefault();\n        courseApi.saveCourse(course);\n    }\n\n*/","import React from 'react';\nimport AboutPage from './AboutPage';\nimport HomePage from './HomePage';\nimport Header from './common/Header';\nimport CoursesPage from './CoursesPage';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport NotFoundPage from './common/NotFoundPage';\nimport ManageCourse from './ManageCourse';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction App(){\n    return (\n        <div className=\"container-fluid\">\n            <Header/>\n            <ToastContainer autoClose={3000} hideProgressBar />\n            <Switch>\n            <Route path=\"/\" exact component={HomePage} />\n            <Route path=\"/courses\" component={CoursesPage} />\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/course/:slug\" component={ManageCourse} />\n            <Route path=\"/course\" component={ManageCourse}/>\n            <Redirect from=\"/about-to\" to=\"/about\"/>\n            <Route component={NotFoundPage} />\n            </Switch>\n        </div>\n        );\n}\n    \n\nexport default App;","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App\";\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nrender(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}